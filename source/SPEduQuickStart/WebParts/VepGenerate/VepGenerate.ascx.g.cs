//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4984
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPEduQuickStart.WebParts.VepGenerate {
    using System.Web;
    using System.Text.RegularExpressions;
    using Microsoft.SharePoint.WebPartPages;
    using System.Web.Security;
    using System.Text;
    using System.Web.SessionState;
    using System;
    using Microsoft.SharePoint.WebControls;
    using System.Web.UI.WebControls;
    using System.Collections.Specialized;
    using Microsoft.SharePoint;
    using System.Web.UI;
    using System.Web.Profile;
    using System.Web.Caching;
    using System.Web.UI.WebControls.WebParts;
    using System.Collections;
    using Microsoft.SharePoint.Utilities;
    using System.Configuration;
    using System.Web.UI.HtmlControls;
    
    
    public partial class VepGenerate {
        
        protected global::System.Web.UI.WebControls.LinkButton BtnGen;
        
        protected global::System.Web.UI.WebControls.Label LblErr;
        
        public static implicit operator global::System.Web.UI.TemplateControl(VepGenerate target) 
        {
            return target == null ? null : target.TemplateControl;
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        private global::System.Web.UI.WebControls.LinkButton @__BuildControlBtnGen() {
            global::System.Web.UI.WebControls.LinkButton @__ctrl;
            @__ctrl = new global::System.Web.UI.WebControls.LinkButton();
            this.BtnGen = @__ctrl;
            @__ctrl.ApplyStyleSheetSkin(this.Page);
            @__ctrl.ID = "BtnGen";
            @__ctrl.Text = "Gen";
            @__ctrl.Visible = true;
            @__ctrl.Click -= new System.EventHandler(this.BtnGenerateClick);
            @__ctrl.Click += new System.EventHandler(this.BtnGenerateClick);
            return @__ctrl;
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        private global::System.Web.UI.WebControls.Label @__BuildControlLblErr() {
            global::System.Web.UI.WebControls.Label @__ctrl;
            @__ctrl = new global::System.Web.UI.WebControls.Label();
            this.LblErr = @__ctrl;
            @__ctrl.ApplyStyleSheetSkin(this.Page);
            @__ctrl.ID = "LblErr";
            return @__ctrl;
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        private void @__BuildControlTree(global::SPEduQuickStart.WebParts.VepGenerate.VepGenerate @__ctrl) {
            System.Web.UI.IParserAccessor @__parser = ((System.Web.UI.IParserAccessor)(@__ctrl));
            @__parser.AddParsedSubObject(new System.Web.UI.LiteralControl("\r\n\r\n<script type=\"text/javascript\">\r\n    var clientContext = null;\r\n    var web =" +
                        " null;\r\n    var strNotificationID;\r\n    var li = \"\";\r\n    var div;\r\n    var lock" +
                        " = true;\r\n\r\n    function showNotification() {\r\n        strNotificationID = SP.UI" +
                        ".Notify.addNotification(\"AGUARDE: <font color=\'#AA0000\'>A Processar Informação.." +
                        "</font>\", true);\r\n    }\r\n\r\n    function removeNotification() {\r\n        \r\n      " +
                        "  if (strNotificationID != null)\r\n            SP.UI.Notify.removeNotification(st" +
                        "rNotificationID);\r\n    }\r\n\r\n    function showErroNotification(descr) {\r\n\r\n      " +
                        "  var htmlerro = \"<font color=\'red\'>\" + descr + \"   </font>\";\r\n        SP.UI.Not" +
                        "ify.addNotification(htmlerro, false);\r\n    }\r\n\r\n    \r\n    function GenerateSites" +
                        "() {\r\n        div = document.getElementById(\"lblProgress\");\r\n        ExecuteOrDe" +
                        "layUntilScriptLoaded(Initialize, \"sp.js\");\r\n    }\r\n\r\n    function Initialize() {" +
                        "\r\n        clientContext = new SP.ClientContext.get_current();\r\n        web = cli" +
                        "entContext.get_web();\r\n        \r\n        clientContext.load(web);\r\n        clien" +
                        "tContext.executeQueryAsync(Function.createDelegate(this, this.onSuccess),\r\n     " +
                        "       Function.createDelegate(this, this.onFail));\r\n    }\r\n    function onSucce" +
                        "ss(sender, args) {\r\n        Load();\r\n    }\r\n    function onFail(sender, args) {\r" +
                        "\n        showErroNotification(\'Failed to get list. Error:\' + args.get_message() " +
                        "+ \'\\n\' + args.get_stackTrace() + \'\');\r\n    }\r\n\r\n\r\n    function Load() {\r\n       " +
                        " \r\n        var list = web.get_lists().getByTitle(\"IA\");\r\n        var camlQuery =" +
                        " new SP.CamlQuery();\r\n        var q = \'<View><RowLimit>1000</RowLimit></View>\';\r" +
                        "\n        camlQuery.set_viewXml(q);\r\n        this.listItems = list.getItems(camlQ" +
                        "uery);\r\n        clientContext.load(listItems, \'Include(Title, SiteDescription,Si" +
                        "teTemplate,SiteTemplate_x003a_Code, Root, CurricularYear, Parent, Code, VisibleB" +
                        "y)\');\r\n        clientContext.executeQueryAsync(Function.createDelegate(this, thi" +
                        "s.onListItemsLoadSuccess),\r\n        Function.createDelegate(this, this.onQueryFa" +
                        "iled));\r\n\r\n\r\n    }\r\n\r\n    function onListItemsLoadSuccess(sender, args) {\r\n     " +
                        "  \r\n\r\n        var listEnumerator = this.listItems.getEnumerator();\r\n        whil" +
                        "e (listEnumerator.moveNext()) {\r\n                var item = listEnumerator.get_c" +
                        "urrent();\r\n                GenerateWeb(item);\r\n        }  \r\n       \r\n        \r\n " +
                        "   }\r\n\r\n    function onQueryFailed(sender, args) {\r\n         showErroNotificatio" +
                        "n(\'REQUEST FAILED: \' + args.get_message() + \'\\n\' + args.get_stackTrace() + \'\');\r" +
                        "\n    }\r\n\r\n\r\n    function CalculateFinalUrl(item) {\r\n        var url = \"\";\r\n     " +
                        "   if (item.get_item(\"Root\") != null)\r\n            { url += item.get_item(\"Root\"" +
                        "); }\r\n        if (item.get_item(\"CurricularYear\") != null)\r\n            { url +=" +
                        " \"/\" + item.get_item(\"CurricularYear\"); }\r\n        if (item.get_item(\"Parent\") !" +
                        "= null)\r\n            { url += \"/\" + item.get_item(\"Parent\"); }\r\n        if (url " +
                        "!= \"\") {\r\n            return url + \"/\" + item.get_item(\"Code\");\r\n        }\r\n    " +
                        "    else {\r\n            return \"\"+ item.get_item(\"Code\");\r\n        }\r\n    }\r\n   " +
                        " \r\n\r\n    function GenerateWeb(item) {\r\n        //debugger;\r\n        if (this.loc" +
                        "k) {\r\n            //removeNotification();\r\n            var webCreateInfo = new S" +
                        "P.WebCreationInformation();\r\n            webCreateInfo.set_description(item.get_" +
                        "item(\"SiteDescription\"));\r\n            var languageId = web.get_language();\r\n   " +
                        "         webCreateInfo.set_language(languageId);\r\n            webCreateInfo.set_" +
                        "title(item.get_item(\"Title\"));\r\n            var url = CalculateFinalUrl(item);\r\n" +
                        "            webCreateInfo.set_url(url);\r\n            webCreateInfo.set_useSamePe" +
                        "rmissionsAsParentSite(true);\r\n            var templatecode = item.get_item(\"Site" +
                        "Template_x003a_Code\").get_lookupValue();\r\n            webCreateInfo.set_webTempl" +
                        "ate(templatecode);\r\n            CreateWebsite(webCreateInfo);\r\n        }\r\n      " +
                        "  else {\r\n            setTimeout(function () {\r\n                //showNotificati" +
                        "on();\r\n                GenerateWeb(item);\r\n            }, 1000);\r\n        }\r\n   " +
                        " }\r\n\r\n    function CreateWebsite(webCreateInfo) {\r\n        this.lock = false;\r\n " +
                        "       this.oNewWebsite =this.web.get_webs().add(webCreateInfo);\r\n        client" +
                        "Context.load(this.oNewWebsite, \'ServerRelativeUrl\', \'Created\');\r\n        clientC" +
                        "ontext.executeQueryAsync(Function.createDelegate(this, this.onCreateWebSuccess)," +
                        " Function.createDelegate(this, this.onQueryFailed));\r\n        \r\n    }\r\n\r\n    fun" +
                        "ction onCreateWebSuccess(sender, args) {\r\n        var html = \"<p>Foi criado com " +
                        "sucesso o site <a href=\'\" + location.protocol + \"//\" + location.host + \'\' + this" +
                        ".oNewWebsite.get_serverRelativeUrl() + \"\' >\" + this.oNewWebsite.get_title() + \"<" +
                        "/a></p><br/>\";\r\n        var myDiv = document.getElementById(\"lblProgress\");\r\n   " +
                        "     myDiv.innerHTML += html;\r\n        this.lock = true;\r\n    }\r\n\r\n    function " +
                        "onQueryFailed(sender, args) {\r\n        showErroNotification(\'REQUEST FAILED: \' +" +
                        " args.get_message() + \'\\n\' + args.get_stackTrace() + \'\');\r\n    }\r\n\r\n\r\n\r\n\r\n    fu" +
                        "nction GetWebTemplates() {\r\n\r\n        var context = new SP.ClientContext.get_cur" +
                        "rent();\r\n\r\n        var web = context.get_web();\r\n        //var languageId = web." +
                        "get_language();\r\n        //alert(languageId);\r\n        //this.templateCollection" +
                        " = web.getAvailableWebTemplates(languageId, false);\r\n        this.templateCollec" +
                        "tion = web.getAvailableWebTemplates(2070, false);\r\n\r\n        context.load(templa" +
                        "teCollection);\r\n\r\n        context.executeQueryAsync(Function.createDelegate(this" +
                        ", this.success), Function.createDelegate(this, this.failed));\r\n    }\r\n\r\n    func" +
                        "tion success() {\r\n\r\n        var Templates = \"\";\r\n\r\n        var siteTemplatesEnum" +
                        " = templateCollection.getEnumerator();\r\n\r\n        while (siteTemplatesEnum.moveN" +
                        "ext()) {\r\n\r\n            var siteTemplate = siteTemplatesEnum.get_current();\r\n\r\n " +
                        "           Templates += siteTemplate.get_title() + \"-\" + siteTemplate.get_name()" +
                        "  +\'\\n\';\r\n\r\n        }\r\n\r\n        alert(\"Site Templates - \" + \'\\n\' + Templates);\r" +
                        "\n\r\n    }\r\n\r\n    function failed(sender, args) {\r\n        alert(\"Failed\");\r\n    }" +
                        "\r\n\r\n    function GenerateTemplates() {\r\n\r\n        ExecuteOrDelayUntilScriptLoade" +
                        "d(GetWebTemplates, \"sp.js\");\r\n    }\r\n\r\n</script>\r\n​\r\n<br />\r\n<br />\r\n<a href=\"#\"" +
                        " onclick=\"javascript:GenerateTemplates();\">Get Web Templates</a>\r\n<br />\r\n<a hre" +
                        "f=\"#\" onclick=\"javascript:GenerateSites();\">Click Here for Generate Sites Struct" +
                        "ures</a>\r\n<br />\r\n"));
            global::System.Web.UI.WebControls.LinkButton @__ctrl1;
            @__ctrl1 = this.@__BuildControlBtnGen();
            @__parser.AddParsedSubObject(@__ctrl1);
            @__parser.AddParsedSubObject(new System.Web.UI.LiteralControl("\r\n<br />\r\n<br />\r\n<br />\r\n<div id=\"lblProgress\"></div>\r\n"));
            global::System.Web.UI.WebControls.Label @__ctrl2;
            @__ctrl2 = this.@__BuildControlLblErr();
            @__parser.AddParsedSubObject(@__ctrl2);
            @__parser.AddParsedSubObject(new System.Web.UI.LiteralControl("\r\n"));
        }
        
        private void InitializeControl() {
            this.@__BuildControlTree(this);
            this.Load += new global::System.EventHandler(this.Page_Load);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        protected virtual object Eval(string expression) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        protected virtual string Eval(string expression, string format) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression, format);
        }
    }
}
